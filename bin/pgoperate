#!/usr/bin/env bash

# Copyright 2020 Trivadis AG <info@trivadis.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#  Created on 07.2019 by Aychin Gasimov
#
# Change log:
#   06.07.2020: Aychin: Initial version created


function help() {
	echo "

Available options:

  --version                Show version. 
  --stop                   Stop current cluster. (Signal will be sent to daemon and operation status received)
  --start                  Start current cluster. (Signal will be sent to daemon and operation status received)
  --reload                 Reload all running clusters. (pg_ctl reload)
  --daemon-status          Check the status of the pgoperated.
  --create-cluster         Create new PostgreSQL Cluster
  --add-cluster            Add existing cluster to pgOperate environment
  --remove-cluster         Removes PostgreSQL Cluster
  --backup                 Backup PostgreSQL CLuster
  --restore                Restore PostgreSQL Cluster
  --check                  Execute monitoring checks
  --standbymgr             Interface to standby manager. Use \"--standbymgr help\" to get available options. 

  For each option you can get help by adding \"help\" keyword after the argument, like:
    pgoperate --backup help

	"
}

case $1 in

 --version) shift
            cat $PGOPERATE_BASE/bin/VERSION
            echo -e
            ;;

  --backup) shift
            $PGOPERATE_BASE/bin/backup.sh "$@"
            ;;

  --restore) shift
            $PGOPERATE_BASE/bin/restore.sh "$@"
            ;;  

  --check) shift
            $PGOPERATE_BASE/bin/check.sh "$@"
            ;;  

  --create-cluster) shift
            $PGOPERATE_BASE/bin/create_cluster.sh "$@"
            ;;  

  --add-cluster) shift
            $PGOPERATE_BASE/bin/add_cluster.sh "$@"
            ;;

  --remove-cluster) shift
            $PGOPERATE_BASE/bin/remove_cluster.sh "$@"
            ;;  

  --standbymgr) shift
            $PGOPERATE_BASE/bin/standbymgr.sh "$@"
            ;;  

  --stop) shift
            [[ -z ${PGBASENV_ALIAS} ]] && echo "Set env for the cluster first." && exit 1
            $PGOPERATE_BASE/bin/control.sh stop
            ;;

  --start) shift
            [[ -z ${PGBASENV_ALIAS} ]] && echo "Set env for the cluster first." && exit 1
            $PGOPERATE_BASE/bin/control.sh start
            ;;

  --reload) shift
            $PGOPERATE_BASE/bin/pgoperated reload
            ;;

  --daemon-status) shift
            $PGOPERATE_BASE/bin/control.sh daemon-status
            ;;

  --help|-h) help
            ;;  



  *) echo -e
     echo "ERROR: Invalid option specified."
     help
     exit 1
     ;;
esac
